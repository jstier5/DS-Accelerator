filter(companyids == thecompanyid)
CalculationData$VPCPredictions[is.na(CalculationData$VPCPredictions)] <- 0
CalculationData$sumClicks[is.na(CalculationData$sumClicks)] <- 0
CampaignAvgVPC <- weighted.mean(CalculationData$VPCPredictions, CalculationData$sumClicks)
CalculationData <- CalculationData %>%
mutate(BidModifier = (VPCPredictions/CampaignAvgVPC))
tempoutput <- select(CalculationData, CampaignId, BidModifier, Criterion.Id, clientCustomerId)
output = rbind(output,tempoutput)
}
}
output <- output %>% mutate(BidModifier = ifelse(BidModifier > 10, 10, BidModifier))
output <- output %>% mutate(BidModifier = ifelse(BidModifier < .1, .1, BidModifier))
}
library(tidyverse)
library(lubridate)
temp <- tempfile()
download.file('https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip',temp)
unzip(temp)
data <- read.table('./household_power_consumption.txt', header = TRUE, sep = ';', na = '?')
data$Date <- dmy(data$Date)
data$Time <- hms(data$Time)
data2 <- filter(data, data$Date == '2007-02-01' | data$Date == '2007-02-02')
data <- read.table('./household_power_consumption.txt', header = TRUE, sep = ';', na = '?')
data$Date <- dmy(data$Date)
data$Time <- hms(data$Time)
data2 <- filter(data, data$Date == '2007-02-01' | data$Date == '2007-02-02')
View(data2)
hist(data2$Global_active_power)
?hist
hist(data2$Global_active_power,
xlab= 'Global Active Power (kilowatts)',
col = 'red')
hist(data2$Global_active_power,
main = 'Global Active Power'
xlab= 'Global Active Power (kilowatts)',
col = 'red')
hist(data2$Global_active_power,
main = 'Global Active Power',
xlab= 'Global Active Power (kilowatts)',
col = 'red')
png(filename='Plot1.png')
hist(data2$Global_active_power,
main = 'Global Active Power',
xlab= 'Global Active Power (kilowatts)',
col = 'red')
dev.off()
setwd('C:\Users\jstier\test-repo')
setwd('C:/Users/jstier/test-repo')
png(filename='Plot1.png')
hist(data2$Global_active_power,
main = 'Global Active Power',
xlab= 'Global Active Power (kilowatts)',
col = 'red')
dev.off()
plot(data2$Date, data2$Global_active_power )
?as_datetime
data2$DateTime <- as.POSIXct(paste(data2$Date, data2$Time))
View(data2)
data2$DateTime <- with(data2, ymd(Date) + hms(Time))
?complete.cases
complete.cases(data2)
complete.cases(data2)
data2 <- data2[complete.cases(data2$Date),]
View(data2)
complete.cases(data2$Time)
data2 <- data2[complete.cases(data2$Time),]
data2 <- filter(data, data$Date == '2007-02-01' | data$Date == '2007-02-02')
data2 <- data2[complete.cases(data2$Time),]
data2$DateTime <- with(data2, ymd(Date) + hms(Time))
data2$DateTime <- with(data2, Date + Time)
plot(data2$DateTime, data2$Global_active_power,
type = 'l',
ylab = 'Global Active Power (kilowatts)')
?with
View(data2)
data2$DateTime <- data2$Date + data2$Time
data2$DateTime <- as_datetime(data2$Date + data2$Time)
data2$DateTime <- ymd_hms(paste(data2$Date,data2$Time))
data$DateTime <- paste(data$Date, data$Time)
data <- read.table('./household_power_consumption.txt', header = TRUE, sep = ';', na = '?')
temp <- tempfile()
download.file('https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip',temp)
unzip(temp)
data <- read.table('./household_power_consumption.txt', header = TRUE, sep = ';', na = '?')
data2 <- filter(data, data$Date == '2007-02-01' | data$Date == '2007-02-02')
View(data)
data2 <- filter(data, data$Date == '01-02-2007' | data$Date == '02-02-2007')
data2 <- filter(data, data$Date == '01/02/2007' | data$Date == '02/02/2007')
data2 <- filter(data, data$Date == '1/2/2007' | data$Date == '2/2/2007')
data2$DateTime <- paste(data2$Date, data2$Time)
data2$Date <- dmy(data2$Date)
data2$Time <- hms(data2$Time)
data2$DateTime <- dmy_hms(data2$DateTime)
View(data2)
hist(data2$Global_active_power,
main = 'Global Active Power',
xlab= 'Global Active Power (kilowatts)',
col = 'red')
plot(data2$DateTime, data2$Global_active_power,
type = 'l',
ylab = 'Global Active Power (kilowatts)')
plot(data2$DateTime, data2$Global_active_power,
type = 'l',
ylab = 'Global Active Power (kilowatts)',
xlab = '')
png(filename = 'Plot2.png')
plot(data2$DateTime, data2$Global_active_power,
type = 'l',
ylab = 'Global Active Power (kilowatts)',
xlab = '')
dev.off()
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
xlab = '',
ylab = 'Energy sub metering')
with(data2$Sub_metering_2)
abline(data2$Sub_metering_2)
abline(data2$Sub_metering_2)
?abline
?plot
?gather
data3 <- gather(data2, key = 'sub_metering', value = value, Sub_metering_1, Sub_metering_2, Sub_metering_3)
View(data3)
plot(data3$DateTime, data3value,
col = data3$sub_metering
type = 'l',
xlab = '',
ylab = 'Energy sub metering')
plot(data3$DateTime, data3value,
col = data3$sub_metering,
type = 'l',
xlab = '',
ylab = 'Energy sub metering')
plot(data3$DateTime, data3$value,
col = data3$sub_metering,
type = 'l',
xlab = '',
ylab = 'Energy sub metering')
data3$sub_metering <- as.factor(data3$sub_metering)
plot(data3$DateTime, data3$value,
col = data3$sub_metering,
type = 'l',
xlab = '',
ylab = 'Energy sub metering')
data3$sub_metering <- as.factor(data3$sub_metering)
plot(data3$DateTime, data3$value,
col = data3$sub_metering,
type = 'l',
xlab = '',
ylab = 'Energy sub metering')
legend(4.5, 7,
legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
col = c('black','red','blue')
)
plot(data3$DateTime, data3$value,
col = data3$sub_metering,
type = 'l',
xlab = '',
ylab = 'Energy sub metering')
legend(4.5, 7,
legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
col = c('black','red','blue')
)
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering',
xaxt = 'n')
?plot
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering',
xaxt = 'n')
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering',
xaxt = 'n')
lines(data2$DateTime, data2$Sub_metering_1, col = 'black')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
ylab = 'Energy sub metering',
xaxt = 'n')
lines(data2$DateTime, data2$Sub_metering_1, col = 'black')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
xlab = '',
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering',
xaxt = 'n')
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering',
xaxt = 'n')
lines(data2$DateTime, data2$Sub_metering_1, col = 'black')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering',
xaxt = 'n')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
axis(side = 1, at = c(1, 1441, 2880), labels = c("Thu", "Fri", "Sat"))
axis(side = 1, at = c(1, 1441, 2880), labels = c("Thu", "Fri", "Sat"))
data2
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering',
xaxt = 'n')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
axis(side = 1, at = c(1, 1441, 2880), labels = c("Thu", "Fri", "Sat"))
axis(side = 1, at = c(1, 1441, 2880), labels = c('Thu', 'Fri'"', 'Sat'))
axis(side = 1, at = c(1, 1441, 2880), labels = c('Thu', 'Fri', 'Sat'))
axis(side = 1, at = c(1, 1441, 2880), labels = c('Thu', 'Fri', 'Sat'))
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering',
xaxt = 'n')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
axis(side = 1, at = c(1, 1441, 2880), labels = c('Thu', 'Fri', 'Sat'))
plot(data2$DateTime, data2$Global_active_power,
type = 'l',
ylab = 'Global Active Power (kilowatts)',
xlab = '')
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
axis(side = 1, at = c(1, 1441, 2880), labels = c('Thu', 'Fri', 'Sat'))
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
png(filename = 'Plot3.png')
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
dev.off()
par(mfrow = c(2,2))
plot(data2$DateTime, data2$Global_active_power,
type = 'l',
ylab = 'Global Active Power',
xlab = '')
plot(data2$DateTime, data2$Voltage,
type = 'l',
ylab = 'Voltage',
xlab = 'datetime')
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
plot(data2$DateTime, data2$Global_reactive_power,
type = 'l',
ylab = 'Global_reactive_power',
xlab = 'datetime')
par(mfrow = c(2,2))
# top left
plot(data2$DateTime, data2$Global_active_power,
type = 'l',
ylab = 'Global Active Power',
xlab = '')
# top right
plot(data2$DateTime, data2$Voltage,
type = 'l',
ylab = 'Voltage',
xlab = 'datetime')
# bottom left
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
# bottom right
plot(data2$DateTime, data2$Global_reactive_power,
type = 'l',
ylab = 'Global_reactive_power',
xlab = 'datetime')
png(filename = 'Plot4.png')
par(mfrow = c(2,2))
# top left
plot(data2$DateTime, data2$Global_active_power,
type = 'l',
ylab = 'Global Active Power',
xlab = '')
# top right
plot(data2$DateTime, data2$Voltage,
type = 'l',
ylab = 'Voltage',
xlab = 'datetime')
# bottom left
plot(data2$DateTime, data2$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(data2$DateTime, data2$Sub_metering_2, col = 'red')
lines(data2$DateTime, data2$Sub_metering_3, col = 'blue')
legend('topright', col = c('black', 'red', 'blue'),
c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
lwd = 1)
# bottom right
plot(data2$DateTime, data2$Global_reactive_power,
type = 'l',
ylab = 'Global_reactive_power',
xlab = 'datetime')
dev.off()
library(tidyverse)
str(mp)
str(mpg)
ggplot(mpg, aes(x = year, y = mpg), color = class) +
geom_point() +
labs(
x = 'Model Year',
y = 'Miles per Gallon (MPG)',
title = 'MPGs Through the Years',
subtitle = 'We\'ve been getting better',
color = 'Car Class'
)
ggplot(mpg, aes(x = year, y = hwy), color = class) +
geom_point() +
labs(
x = 'Model Year',
y = 'Highway MPG',
title = 'MPGs Through the Years',
subtitle = 'We\'ve been getting better',
color = 'Car Class'
)
unique(mpg$year)
ggplot(mpg, aes(x = year, y = hwy, color = class)) +
geom_point() +
labs(
x = 'Model Year',
y = 'Highway MPG',
title = 'MPGs Through the Years',
subtitle = 'Well, I thought this would be interesting. Whoops',
color = 'Car Class'
)
ggplot(mpg, aes(x = displ, y = hwy, colour = class)) +
geom_point(aes(colour = class)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Subcompact cars show the greatest sensitivity to engine size",
caption = "Data from fueleconomy.gov"
)
ggplot(mpg, aes(x = displ, y = hwy, colour = class)) +
geom_point(aes(colour = class)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Subcompact cars show the greatest sensitivity to engine size"
)
library(tidyverse)
data2 <- data %>%
group_by(CardType) %>%
summarise(Fico_index_mean = mean(Fico_index),
spend_index_mean = mean(spend_index)) %>%
gather(key = 'metric', value = 'value', Fico_index_mean, spend_index_mean)
data2[complete.cases(data2), ]
ggplot(data2) + geom_col(mapping = aes(x=CardType, y = value, fill = metric), position = 'dodge')
```{r, echo=FALSE, warning=FALSE}
?annotate()
years <- lubridate::make_date(seq(year(min(presidential$start)),
year(max(presidential$end)),
by = 4), 1, 1)
presidential %>%
mutate(id = 33 + row_number(),
name_id = stringr::str_c(name, " (", id, ")"),
name_id = factor(name_id, levels = name_id)) %>%
ggplot(aes(start, name_id, colour = party)) +
geom_point() +
geom_segment(aes(xend = end, yend = name_id)) +
scale_colour_manual(values = c(Republican = "red", Democratic = "blue")) +
scale_y_discrete(NULL) +
scale_x_date(NULL, breaks = years, date_labels = "'%y") +
theme(panel.grid.minor = element_blank())
?panel.lmline()
?lattice::lines
install.packages('lattice')
?lines()
?axis()
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
smaller %>%
ggplot(aes(carat)) +
geom_freqpoly(binwidth = 0.01)
library(tidyverse)
knitr::kable(
arrange(diamonds, desc(carat))[1:20,1:4],
caption = '20 Largest Diamonds'
)
ggplot(mpg, aes(x = displ, y = hwy, colour = class)) +
geom_point(aes(colour = class)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "Fuel efficiency decreases with engine size",
subtitle = "Subcompact cars are the most sensitive to engine size"
)
ggplot(mpg, aes(x = displ, y = hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "Fuel efficiency decreases with engine size",
subtitle = "Subcompact cars are the most sensitive to engine size"
)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
ggplot(mpg, aes(displ, hwy, color = class)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov")
label <- tribble(
~displ, ~hwy, ~label, ~vjust, ~hjust,
Inf,  Inf,    "Top right", "top", "right",
Inf, -Inf,    "Bottom right", "bottom", "right",
-Inf,  Inf,    "Top left", "top", "left",
-Inf, -Inf,    "Bottom left", "bottom", "left"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_text(aes(label = label, vjust = vjust, hjust = hjust), data = label)
years <- lubridate::make_date(seq(year(min(presidential$start)),
year(max(presidential$end)),
by = 4), 1, 1)
presidential %>%
mutate(id = 33 + row_number(),
name_id = stringr::str_c(name, ' (', id, ')'),
name_id = factor(name_id, levels = name_id)) %>%
ggplot(aes(start, name_id, colour = party)) +
geom_point() +
geom_segment(aes(xend = end, yend = name_id)) +
scale_colour_manual(values = c(Republican = 'red', Democratic = 'blue')) +
scale_y_discrete(NULL) +
scale_x_date(NULL, breaks = years, date_labels = "'%y") +
theme(panel.grid.minor = element_blank())
years <- lubridate::make_date(seq(year(min(presidential$start)),
year(max(presidential$end)),
by = 4), 1, 1)
print(years)
ggplot(diamonds, aes(carat, price)) +
geom_point(aes(colour = cut), alpha = 1/20)  +
theme(legend.position = "bottom") +
guides(colour = guide_legend(nrow = 1, override.aes = list(alpha = 1)))
